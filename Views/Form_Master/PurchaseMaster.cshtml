
@{
    ViewData["Title"] = "PurchaseMaster";
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />

<!-- jQuery (needed for Select2 to work) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Select2 JS -->
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script>
<title>Purchase Entry Form</title>
<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h5>Purchase Order Entry</h5>
            <!-- Save and Cancel Buttons -->
            <div class="col-12 mt-4 text-end">
                <button type="submit" class="btn btn-success" onclick="SavePurchaseDetail()" id="submitButton">Save</button>
                <button type="button" class="btn btn-success" id="updateButton" onclick="updatePurchaseForm()" style="display: none;">Update</button>
                <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("POEntryList", "Home")'">Cancel</button>
            </div>
        </div>
        <div class="card-body">
            <form>
                <div class="row g-3">
                     <div class="col-md-6">
                            <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="orderNo" placeholder="code" readonly/>
                        <label for="orderNo">Order No</label>
                        </div>
                        </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="date" class="form-control" id="orderDate" placeholder="cal" readonly />
                            <label for="orderDate">Order Date</label>
                        </div>
                    </div>

                    <!-- Vendor -->
                    <div class="col-12">
                        <div class="form-floating">
                            <select class="form-select" id="vendor">
                                <option value="" selected>Select vendor</option>
                            </select>
                            <label for="vendor">Vendor</label>
                        </div>
                    </div>

                    <!-- Notes -->
                    <div class="col-12">
                        <div class="form-floating">
                            <textarea class="form-control" id="notes" placeholder="Notes" style="height: 100px;"></textarea>
                            <label for="notes">Notes</label>
                        </div>
                    </div>

                    <!-- Order Value -->
                    <div class="col-12">
                        <div class="form-floating col-6">
                            <input type="text" class="form-control" id="orderValue" placeholder="Order Value" readonly/>
                            <label for="orderValue">Order Value</label>
                        </div>
                    </div>

                    <!-- Material, Code, Short Text, and Unit -->
                    
                    <div class="col-md-4">
                        <div class="form-floating">
                            <select class="form-select" id="code">
                                <option value="" selected>Select Code</option>
                            </select>
                            <label for="code">Code</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-floating">
                            <select class="form-select" id="shortText">
                                <option value="" selected>Select ShortTxt</option>
                            </select>
                            <label for="shortText">Short Text</label>
                        </div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="unit" placeholder="Unit" readonly />
                            <label for="unit">Unit</label>
                        </div>
                    </div>
                    <!-- Quantity, Rate, Amount, Expected Date -->
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="tel" class="form-control" id="quantity" placeholder="Quantity" oninput="validateQuantity();updateAmount()" />
                            <label for="quantity">Quantity</label>
                            <small id="quantityError" style="color: red; display: none;">Please enter a valid number.</small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="tel" class="form-control" id="rate" placeholder="Rate" oninput="validateRate();updateAmount();"/>
                            <label for="rate">Rate</label>
                            <small id="rateError" style="color: red; display: none;">Please enter a valid number.</small>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="amount" placeholder="Amount" readonly />
                            <label for="amount">Amount</label>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="date" class="form-control" id="expectedDate" placeholder="expectedDate" />
                            <label for="expectedDate">Expected Date</label>
                        </div>
                    </div>

                    <!-- Buttons -->
                    <div class="col-12">
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-primary" onclick="AddPurchaseToTable()">Add Line</button>
                            <button type="button" class="btn btn-secondary">Update Line</button>
                            <button type="button" class="btn btn-danger" onclick="removeSelectedLines()">Remove Line</button>
                        </div>
                    </div>

                    <!-- Table -->
                    <div class="col-12 mt-4">
                        <table class="table table-bordered">
                            <thead class="table-primary">
                                <tr>
                                    <th>Select</th>
                                    <th>Code</th>
                                    <th>Quantity</th>
                                    <th>Rate</th>
                                    <th>Amount</th>
                                    <th>Exp Date</th>
                                </tr>
                            </thead>
                            <tbody id="purchaseTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>

             
            </form>
        </div>
    </div>
</div>

<style>
    .card {
        border-radius: 10px;
    }

    .form-floating label {
        padding: 0.5rem 0.75rem;
    }
</style>

<script type="text/javascript">
    var purchaseDetail={};
    $(document).ready(function () {
        CurrentDate();
        loadMaterialData();
        loadVendorData();
        getQueryStringValue('Code');
    });
    var materialOrderData={};
    var orderValue;
    var amountvalue;
    function CurrentDate(){
        const orderDateInput = document.getElementById("orderDate");
        const today = new Date().toISOString().split('T')[0]; 
        console.log("Date",today);
        orderDateInput.value = today;
    }
    function getQueryStringValue(key) {
        var urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(key);
    }

    var vendorCode = getQueryStringValue('Code');
    if(vendorCode!=null){
        GetPurchaseDataByCodeId(vendorCode);
    }
    
    function loadMaterialData() {
        $.ajax({
            url: '/Home/GetMaterialData',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log("Material Data", data);
                materialOrderData=data;
                //var dropdown = $('#shortText'); 
                //var dropdownCode = $('#code');
                //dropdown.empty();
                //dropdownCode.empty();
                //dropdown.append('<option value="" selected>Select ShortTxt</option>');
                //dropdownCode.append('<option value="" selected>Select Code</option>');
                //// Iterate over the data and append options to the dropdown
                //data.forEach(function (material) {
                //    dropdown.append(new Option(material.shortTxt));
                //    dropdownCode.append(new Option( material.code));
                //});
                var dropdownCode = $('#code');
dropdownCode.empty();
dropdownCode.append('<option value="" selected>Select Code</option>');
var codeOptions = [...new Set(data.map(item => item.code))]; // Get unique codes
codeOptions.forEach(function (code) {
    dropdownCode.append(new Option(code, code));
});

// Event listener for Code selection
dropdownCode.change(function () {
    var selectedCode = $(this).val();
    updateShortTextDropdown(selectedCode); // Update ShortTxt dropdown based on Code selection
    $('#unit').val(''); // Reset Unit input field
});
//$('#code').select2({
//    placeholder: "Select Code",
//    allowClear: true
//});

//$('#shortText').select2({
//    placeholder: "Select ShortTxt",
//    allowClear: true
//});

$('#shortText').change(function () {
    var selectedShortTxt = $(this).val();
    updateUnitField(selectedShortTxt);
});

            },
            error: function (xhr, status, error) {
                console.error('Error loading material data:', error);
                $('#vendorData').html('<p>Error loading material data.</p>');
            }
        });
    }
    function validateQuantity() {
        const quantityInput = document.getElementById("quantity");
        const quantityError = document.getElementById("quantityError");
        if (quantityInput.value === "") {
            quantityError.style.display = "none"; 
        }
        else if (!/^\d+$/.test(quantityInput.value)) {
            quantityError.style.display = "block"; 
        } else {
            quantityError.style.display = "none";
        }
    }
    function validateRate() {
        const rateInput = document.getElementById("rate");
        const rateError = document.getElementById("rateError");
        if (rateInput.value === "") {
            rateError.style.display = "none";
        }
        else if (!/^\d+$/.test(rateInput.value)) {
            rateError.style.display = "block";
        } else {
            rateError.style.display = "none";
        }
    } 
    function updateAmount() {
        const quantity = document.getElementById("quantity").value;
        const rate = document.getElementById("rate").value;
        const amountInput = document.getElementById("amount");
        const orderInput = document.getElementById("orderValue");
        // Check if both quantity and rate are valid numbers
        if (!isNaN(quantity) && !isNaN(rate) && quantity !== "" && rate !== "") {
            amountInput.value = (parseFloat(quantity) * parseFloat(rate)).toFixed(2); // Calculate and set amount
            orderInput.value= amountInput.value
        } else {
            amountInput.value = ""; // Clear the amount if inputs are invalid
        }
    }

    function loadVendorData() {
        $.ajax({
            url: '/Home/GetVendorData', // Your controller action URL
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log("Vendor Data", data);

                var dropdownCodeVendor = $('#vendor');
                dropdownCodeVendor.empty();
                dropdownCodeVendor.append('<option value="" selected>Select Vendor</option>');
                // Iterate over the data and append options to the dropdown
                data.forEach(function (vendor) {
                    dropdownCodeVendor.append(new Option(vendor.name));
                });

            },
            error: function (xhr, status, error) {
                console.error('Error loading vendor data:', error);
                $('#vendorData').html('<p>Error loading vendor data.</p>');
            }
        });

    }
    function AddPurchaseToTable() {
          purchaseDetail = {
            OrderDate: $('#orderDate').val(),
            Vendor: $('#vendor').val(),
            Notes: $('#notes').val(),
            OrderValue: $('#orderValue').val(),
            Code: $('#code').val(),
            ShortTxt: $('#shortText').val(),
            Unit: $('#unit').val(),
            Quantity: $('#quantity').val(),
            Rate: $('#rate').val(),
            ExpectedDate: $('#expectedDate').val(),
            Amount: (quantity * rate).toFixed(2),
        };
        // Get values from the form
        var orderNo = $('#orderNo').val();
        var vendor = $('#vendor').val();
        var notes = $('#notes').val();
        var orderValue = $('#orderValue').val();
        var code = $('#code').val();
        var shortText = $('#shortText').val();
        var unit = $('#unit').val();
        var quantity = $('#quantity').val();
        var rate = $('#rate').val();
        var expectedDate = $('#expectedDate').val();
        var amount = (quantity * rate).toFixed(2);

        // Validate required fields (you can modify this as per your requirements)
        if (!code || !quantity || !rate || !amount || !expectedDate) {
            alert("Please fill in all required fields.");
            return;
        }

        // Create new row with the collected data
        var newRow = `
            <tr>
                <td><input type="checkbox" /></td>
                <td>${code}</td>
                <td>${quantity}</td>
                <td>${rate}</td>
                <td>${amount}</td>
                <td>${expectedDate}</td>
            </tr>
        `;

        // Append the new row to the table
        $('#purchaseTableBody').append(newRow);
        $('#code').val('');
        $('#quantity').val('');
        $('#rate').val('');
        $('#amount').val('');
        $('#expectedDate').val('');
    }
    function removeSelectedLines() {
        // Find all checked checkboxes and remove the corresponding rows
        $('#purchaseTableBody').find('input.row-checkbox:checked').each(function () {
            $(this).closest('tr').remove();
        });
    }

    function SavePurchaseDetail() {

         purchaseDetail = {
            OrderDate: $('#orderDate').val(),
            Vendor: $('#vendor').val(),
            Notes: $('#notes').val(),
            MCode: $('#code').val(),
            ShortTxt: $('#shortText').val(),
            Unit: $('#unit').val(),
            Quantity: $('#quantity').val(),
            Rate: $('#rate').val(),
            ExpectedDate: $('#expectedDate').val(),
            Amount: $('#amount').val(),
            OrderValue:$('#orderValue').val() ,
        };
        $.ajax({
            url: '/Form_Master/SavePurchaseDetail',
            data: JSON.stringify(purchaseDetail),
            type: 'POST',
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    console.log(response.message);
                    window.location.href = '@Url.Action("POEntryList", "Home")';
                } else {
                    alert({ message: "An error occurred" })
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
                errorCallback({ message: "An error occurred" });
            }
        });
    }
    function GetPurchaseDataByCodeId(vendorCode) {
        $.ajax({
            url: '/Form_Master/GetPurchaseDataByVendorCode',
            data: JSON.stringify({ OrderNo: vendorCode }),
            type: 'POST',
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                if (response) {
                    console.log("vendor res", response);
                    const item = response[0];
                    document.getElementById("orderNo").value = item.pCode || "";
                    document.getElementById("orderDate").value = item.orderDate || "";
                    document.getElementById("vendor").value = item.vendor || "";
                    document.getElementById("notes").value = item.notes
                        || ""; // Format date to yyyy-MM-dd for input[type="date"]
                    document.getElementById("orderValue").value = item.orderValue || "";
                    document.getElementById("code").value = item.mCode || "";
                    document.getElementById("shortText").value = item.shortTxt || "";
                    document.getElementById("unit").value = item.unit || "";
                    document.getElementById("quantity").value = item.quantity || "";
                    document.getElementById("rate").value = item.rate || "";
                    document.getElementById("expectedDate").value = item.expected_Date || "";
                    document.getElementById("amount").value = item.amount || "";
                    
                    document.getElementById("submitButton").style.display = "none";
                    document.getElementById("updateButton").style.display = "inline-block";
                } else {
                    alert({ message: "An error occurred" })
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
                errorCallback({ message: "An error occurred" });
            }
        });
    }
    function updatePurchaseForm() {
       var purchasesDetail = {
           OrderNo:vendorCode,
            OrderDate: $('#orderDate').val(),
            Vendor: $('#vendor').val(),
            Notes: $('#notes').val(),
            OrderValue: $('#orderValue').val(),
            MCode: $('#code').val(),
            ShortTxt: $('#shortText').val(),
            Unit: $('#unit').val(),
            Quantity: $('#quantity').val(),
            Rate: $('#rate').val(),
            Expected_Date: $('#expectedDate').val(),
            Amount: $('#amount').val(),
        };
        $.ajax({
            url: '/Form_Master/UpdatePurchaseDetail',
            data: JSON.stringify(purchasesDetail),
            type: 'POST',
            contentType: "application/json", 
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    console.log(response.message);
                    window.location.href = '@Url.Action("POEntryList", "Home")';
                } else {
                    alert({ message: "An error occurred" })
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
                errorCallback({ message: "An error occurred" });
            }
        });
    }
    function updateShortTextDropdown(code) {
    var dropdownShortText = $('#shortText');
    dropdownShortText.empty();
    dropdownShortText.append('<option value="" selected>Select ShortTxt</option>');
    
    // Filter data based on the selected Code
    var filteredShortTexts = materialOrderData.filter(function (item) {
        return item.code === code;
    });

    // Populate the ShortTxt dropdown with filtered values
    filteredShortTexts.forEach(function (item) {
        dropdownShortText.append(new Option(item.shortTxt, item.shortTxt));
    });
}
function updateUnitField(shortTxt) {
    var selectedItem = materialOrderData.find(function (item) {
        return item.shortTxt === shortTxt;
    });

    if (selectedItem) {
        $('#unit').val(selectedItem.unit); // Set the Unit value in the input field
    } else {
        $('#unit').val(''); // Reset Unit if no valid ShortTxt is selected
    }
}
    </script>
